// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2023 Vidyo, Inc. All rights reserved.


using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;

namespace VidyoClient
{
	public class ConnectorShareOptionsFactory
	{
		public static ConnectorShareOptions Create()
		{
			return new ConnectorShareOptions(IntPtr.Zero);
		}
		public static void Destroy(ConnectorShareOptions obj)
		{
		}
	}
	/// <summary>
	/// Represent the options for sharing.
	/// </summary>
	public class ConnectorShareOptions {
#if __IOS__
		const string importLib = "__Internal";
#else
		const string importLib = "libVidyoClient";
#endif
		private IntPtr objPtr; // opaque VidyoConnectorShareOptions reference.
		public IntPtr GetObjectPtr() {

			VidyoConnectorShareOptionsSetenableAudioNative(objPtr, enableAudio);
			VidyoConnectorShareOptionsSetenableHighFramerateNative(objPtr, enableHighFramerate);

			return objPtr;
		}
		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		[return: MarshalAs(UnmanagedType.I1)]
		private static extern Boolean VidyoConnectorShareOptionsGetenableAudioNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoConnectorShareOptionsSetenableAudioNative(IntPtr obj, Boolean enableAudio);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		[return: MarshalAs(UnmanagedType.I1)]
		private static extern Boolean VidyoConnectorShareOptionsGetenableHighFramerateNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoConnectorShareOptionsSetenableHighFramerateNative(IntPtr obj, Boolean enableHighFramerate);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoConnectorShareOptionsConstructCopyNative(IntPtr obj);

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoConnectorShareOptionsConstructDefaultNative();

		[DllImport(importLib, CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoConnectorShareOptionsDestructNative(IntPtr obj);

		/// <summary>
		/// A variable that indicates whether the sharing will be with or without audio.
		/// </summary>
		public Boolean enableAudio;
		/// <summary>
		/// A variable that indicates whether the sharing will be with or without high framerate share.
		/// </summary>
		public Boolean enableHighFramerate;
		public ConnectorShareOptions(IntPtr obj){
			if(obj == IntPtr.Zero) {
				objPtr = VidyoConnectorShareOptionsConstructDefaultNative();
			}
			else {
				objPtr = VidyoConnectorShareOptionsConstructCopyNative(obj);
			}

			enableAudio = VidyoConnectorShareOptionsGetenableAudioNative(objPtr);
			enableHighFramerate = VidyoConnectorShareOptionsGetenableHighFramerateNative(objPtr);
		}
		~ConnectorShareOptions() {
			VidyoConnectorShareOptionsDestructNative(objPtr);
		 }
	};
}
